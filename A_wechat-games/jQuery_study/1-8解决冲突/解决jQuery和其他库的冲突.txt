在jQuery库中，几乎所有的插件都被限制在它的命名空间里。通常，全局对象都被很好的存储在jQuery命名空间里，因此当把jQuery和其他javascript库
（例如Prototype,MooTools或YUI）一起使用时，不会引起冲突。


注意： 默认情况下，jQUery用$作为自身的快捷方式。


1，jQuery 库在其他库之后导入

	在其他库和jQuery库都被加载完毕后，可以在任何时候调用jQuery.noConflict()函数来将变量$的控制权移交给其他Javascript，
示例代码见1-8-1.html.
	然后，就可以在程序里将jQuery()函数作为jQUery对象的制造工厂。
	此外，还有另一种选择。如果想确保jQUery不会与其他库冲突，但又想自定义一个快捷方式，可以进行另一种操作，参考1-8-2.html.
	可以自定义备用名称，例如jq,$j,awesomequery等。
	
	如果不想给jQuery自定义这些备用名称，还想使用$而不管其他库的$()方法，同时又不想与其他库相冲突，那么可以使用一下两种解决方法。
	第一，参考1-8-3.html.
	第二，参考1-8-4.html.(使用匿名函数)，这个应该是最理想的方式因为可以通过改变最少的代码来实现全面的兼容性。
	
2，jQuery库在其他库之前导入
	如果jQUery库在其他 库之前酒倒入了，那么可以直接使用“jQuery”来做一些jQUery的工作。同时，可以使用$()方式作为其他库的快捷方式。
这里就无需调用jQuery.noConflict()函数。参考1-8-5.html.
